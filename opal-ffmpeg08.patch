Index: opal-3.6.8/plugins/configure.ac
===================================================================
--- opal-3.6.8.orig/plugins/configure.ac
+++ opal-3.6.8/plugins/configure.ac
@@ -237,9 +237,9 @@ PKG_CHECK_MODULES([LIBAVCODEC],
                                          HAVE_H264_DECODER=yes
                                          ;;
                                      * ) 
-                                         AC_CHECK_LIB(avcodec, h263p_encoder, [HAVE_H263P=yes], [HAVE_H263P=no])
-                                         AC_CHECK_LIB(avcodec, mpeg4_encoder, [HAVE_MPEG4=yes], [HAVE_MPEG4=no])
-                                         AC_CHECK_LIB(avcodec, h264_decoder, [HAVE_H264_DECODER=yes], [HAVE_H264_DECODER=no])
+                                         OPAL_CODEC_CHECK(HAVE_H263P, encoder, CODEC_ID_H263P)
+                                         OPAL_CODEC_CHECK(HAVE_MPEG4, encoder, CODEC_ID_MPEG4)
+                                         OPAL_CODEC_CHECK(HAVE_H264_DECODER, decoder, CODEC_ID_H264)
                                          ;;
                    esac
                    AC_SUBST(HAVE_H263P)
Index: opal-3.6.8/plugins/video/common/dyna.cxx
===================================================================
--- opal-3.6.8.orig/plugins/video/common/dyna.cxx
+++ opal-3.6.8/plugins/video/common/dyna.cxx
@@ -240,43 +240,7 @@ bool FFMPEGLibrary::Load(int ver)
     return false;
   }
 
-  if (_codec==CODEC_ID_H264) {
-    if (!libAvcodec.GetFunction("h264_decoder", (DynaLink::Function &)Favcodec_h264_decoder)) {
-      TRACE (1, _codecString << "\tDYNA\tFailed to load h264_decoder");
-      return false;
-    }
-  }
-  
-  if (_codec==CODEC_ID_H263P) {
-    if (!libAvcodec.GetFunction("h263_encoder", (DynaLink::Function &)Favcodec_h263_encoder)) {
-      TRACE (1, _codecString << "\tDYNA\tFailed to load h263_encoder" );
-      return false;
-    }
-  
-    if (!libAvcodec.GetFunction("h263p_encoder", (DynaLink::Function &)Favcodec_h263p_encoder)) {
-      TRACE (1, _codecString << "\tDYNA\tFailed to load h263p_encoder" );
-      return false;
-    }
-
-    if (!libAvcodec.GetFunction("h263_decoder", (DynaLink::Function &)Favcodec_h263_decoder)) {
-      TRACE (1, _codecString << "\tDYNA\tFailed to load h263_decoder" );
-      return false;
-    }
-  }
-
-  if (_codec==CODEC_ID_MPEG4) {
-    if (!libAvcodec.GetFunction("mpeg4_encoder", (DynaLink::Function &)mpeg4_encoder)) {
-      TRACE (1, _codecString << "\tDYNA\tFailed to load mpeg4_encoder");
-      return false;
-    }
-
-    if (!libAvcodec.GetFunction("mpeg4_decoder", (DynaLink::Function &)mpeg4_decoder)) {
-      TRACE (1, _codecString << "\tDYNA\tFailed to load mpeg4_decoder");
-      return false;
-    }
-  }
-
-  if (!libAvcodec.GetFunction("register_avcodec", (DynaLink::Function &)Favcodec_register)) {
+  if (!libAvcodec.GetFunction("avcodec_register_all", (DynaLink::Function &)Favcodec_register_all)) {
     TRACE (1, _codecString << "\tDYNA\tFailed to load register_avcodec");
     return false;
   }
@@ -370,20 +334,13 @@ bool FFMPEGLibrary::Load(int ver)
     }
 
     Favcodec_init();
+    Favcodec_register_all();
 
-    // register only the codecs needed (to have smaller code)
-    if (_codec==CODEC_ID_H264) 
-      Favcodec_register(Favcodec_h264_decoder);
-
-    if (_codec==CODEC_ID_H263P) {
-      Favcodec_register(Favcodec_h263_encoder);
-      Favcodec_register(Favcodec_h263p_encoder);
-      Favcodec_register(Favcodec_h263_decoder);
-    }
-
-    if (_codec==CODEC_ID_MPEG4) {
-      Favcodec_register(mpeg4_encoder);
-      Favcodec_register(mpeg4_decoder);
+    /* check for the codec */
+    if (Favcodec_find_decoder(_codec) == NULL &&
+	Favcodec_find_encoder(_codec) == NULL) {
+      TRACE (1, _codecString << "\tDYNA\tFailed to load codec");
+      return false;
     }
 
     if (FFCheckAlignment() != 0) {
Index: opal-3.6.8/plugins/video/common/dyna.h
===================================================================
--- opal-3.6.8.orig/plugins/video/common/dyna.h
+++ opal-3.6.8/plugins/video/common/dyna.h
@@ -187,14 +187,8 @@ class FFMPEGLibrary
     char _codecString [32];
 
     void (*Favcodec_init)(void);
-    AVCodec *Favcodec_h263_encoder;
-    AVCodec *Favcodec_h263p_encoder;
-    AVCodec *Favcodec_h263_decoder;
-    AVCodec *Favcodec_h264_decoder;
-    AVCodec *mpeg4_encoder;
-    AVCodec *mpeg4_decoder;
 
-    void (*Favcodec_register)(AVCodec *format);
+    void (*Favcodec_register_all)(void);
     AVCodec *(*Favcodec_find_encoder)(enum CodecID id);
     AVCodec *(*Favcodec_find_decoder)(enum CodecID id);
     AVCodecContext *(*Favcodec_alloc_context)(void);
Index: opal-3.6.8/opal.m4
===================================================================
--- opal-3.6.8.orig/opal.m4
+++ opal-3.6.8/opal.m4
@@ -1055,3 +1055,26 @@ AC_DEFUN([OPAL_DETERMINE_ILBC],
 					OPAL_MSG_CHECK([System iLBC], [$has_ilbc])
 				fi
       ])
+
+dnl OPAL_CODEC_CHECK
+dnl check for a codec presence in ffmpeg
+dnl Arguments: $1 name of configure option
+dnl 	       $2 'encode' or 'decode'
+dnl 	       $3 name of codec to check for (define in ffmpeg)
+AC_DEFUN([OPAL_CODEC_CHECK],
+	 [
+	  AC_MSG_CHECKING(checking for codec $3 in libavcodec)
+	  AC_LANG([C])
+	  LIBS=-lavcodec
+	  AC_RUN_IFELSE(
+	    [AC_LANG_PROGRAM([[
+				#include <libavcodec/avcodec.h>
+			     ]],
+			     [[
+			       avcodec_init();
+			       avcodec_register_all();
+			       return avcodec_find_$2($3) == NULL;
+			     ]]
+	    )], [$1=yes], [$1=no], [$1=no])
+	  AC_MSG_RESULT($$1)
+	  ])
diff --git a/include/h323/h323ep.h b/include/h323/h323ep.h
--- a/include/h323/h323ep.h
+++ b/include/h323/h323ep.h
@@ -60,6 +60,7 @@ class H225_H221NonStandard;
 class H225_H221NonStandard;
 class H225_ServiceControlDescriptor;
 class H225_FeatureSet;
+class H225_ArrayOf_SupportedProtocols;
 
 class H235SecurityInfo;
 
diff --git a/plugins/video/H.264/shared/h264frame.cxx b/plugins/video/H.264/shared/h264frame.cxx
--- a/plugins/video/H.264/shared/h264frame.cxx
+++ b/plugins/video/H.264/shared/h264frame.cxx
@@ -86,7 +86,6 @@ H264Frame::~H264Frame ()
 
 #ifndef LICENCE_MPL
 void H264Frame::SetFromFrame (x264_nal_t *NALs, int numberOfNALs) {
-  int vopBufferLen;
   int currentNAL = 0;
 
   uint8_t* currentPositionInFrame=(uint8_t*) _encodedFrame;
@@ -99,8 +98,9 @@ void H264Frame::SetFromFrame (x264_nal_t
 
   // read the nals out of the encoder and create meta data about their location and size in the frame
   for (currentNAL = 0; currentNAL < numberOfNALs; currentNAL++) {
-    int currentNALLen;
-    currentNALLen = X264_NAL_ENCODE(currentPositionInFrame, &vopBufferLen, 1, &NALs[currentNAL]);
+    int currentNALLen = NALs[currentNAL].i_payload;
+    memcpy(currentPositionInFrame, NALs[currentNAL].p_payload, NALs[currentNAL].i_payload);
+
     if (currentNALLen > 0) 
     {
       _NALs[_numberOfNALsInFrame].length = currentNALLen;
--- opal-3.6.8/plugins/video/H.263-1998/h263-1998.cxx~	2010-05-27 08:52:46.000000000 +0200
+++ opal-3.6.8/plugins/video/H.263-1998/h263-1998.cxx	2011-06-30 16:50:50.842457173 +0200
@@ -364,9 +364,6 @@
   _context->qmax = round ( (31.0 - H263P_MIN_QUANT) / 31.0 * tsto + H263P_MIN_QUANT);
   _context->qmax = std::min( _context->qmax, 31);

-  _context->mb_qmin = _context->qmin;
-  _context->mb_qmax = _context->qmax;
-
   // Lagrange multipliers - this is how the context defaults do it:
   _context->lmin = _context->qmin * FF_QP2LAMBDA;
   _context->lmax = _context->qmax * FF_QP2LAMBDA;
@@ -478,8 +475,8 @@
   CODEC_TRACER(tracer, "GOP is " << _context->gop_size);
   CODEC_TRACER(tracer, "qmin set to " << _context->qmin);
   CODEC_TRACER(tracer, "qmax set to " << _context->qmax);
-  CODEC_TRACER(tracer, "mb_qmin set to " << _context->mb_qmin);
-  CODEC_TRACER(tracer, "mb_qmax set to " << _context->mb_qmax);
+  CODEC_TRACER(tracer, "mb_qmin set to " << _context->qmin);
+  CODEC_TRACER(tracer, "mb_qmax set to " << _context->qmax);
   CODEC_TRACER(tracer, "bit_rate set to " << _context->bit_rate);
   CODEC_TRACER(tracer, "bit_rate_tolerance set to " <<_context->bit_rate_tolerance);
   CODEC_TRACER(tracer, "rc_min_rate set to " << _context->rc_min_rate);
@@ -688,7 +688,7 @@
 
   _inputFrame->data[1] = _inputFrame->data[0] + size;
   _inputFrame->data[2] = _inputFrame->data[1] + (size / 4);
-  _inputFrame->pict_type = (flags && forceIFrame) ? FF_I_TYPE : 0;
+  _inputFrame->pict_type = AV_PICTURE_TYPE_I;
 
   currentMb = 0;
   currentBytes = 0;
@@ -885,7 +885,7 @@
   _inputFrame->data[0] = _inputFrameBuffer + FF_INPUT_BUFFER_PADDING_SIZE;
   _inputFrame->data[1] = _inputFrame->data[0] + size;
   _inputFrame->data[2] = _inputFrame->data[1] + (size / 4);
-  _inputFrame->pict_type = (flags && forceIFrame) ? FF_I_TYPE : 0;
+  _inputFrame->pict_type = AV_PICTURE_TYPE_I;
  
   _txH263PFrame->BeginNewFrame();
   _txH263PFrame->SetTimestamp(srcRTP.GetTimestamp());
--- opal-3.6.8/plugins/video/MPEG4-ffmpeg/mpeg4.cxx~	2010-05-27 08:52:47.000000000 +0200
+++ opal-3.6.8/plugins/video/MPEG4-ffmpeg/mpeg4.cxx	2011-07-01 10:27:44.590440941 +0200
@@ -828,11 +828,7 @@
         // Should the next frame be an I-Frame?
         if ((flags & PluginCodec_CoderForceIFrame) || (_frameNum == 0))
         {
-            _avpicture->pict_type = FF_I_TYPE;
-        }
-        else // No IFrame requested, let avcodec decide what to do
-        {
-            _avpicture->pict_type = 0;
+            _avpicture->pict_type = AV_PICTURE_TYPE_I;
         }
 
         // Encode a frame
@@ -1363,7 +1359,7 @@
     if (_doError) {
         int errors = 0;
         MpegEncContext *s = (MpegEncContext *) _avcontext->priv_data;
-        if (s->error_count && _avcontext->coded_frame->pict_type == FF_I_TYPE) {
+        if (s->error_count && _avcontext->coded_frame->pict_type == AV_PICTURE_TYPE_I) {
             const uint8_t badflags = AC_ERROR | DC_ERROR | MV_ERROR;
             for (int i = 0; i < s->mb_num && errors < threshold; ++i) {
                 if (s->error_status_table[s->mb_index2xy[i]] & badflags)
